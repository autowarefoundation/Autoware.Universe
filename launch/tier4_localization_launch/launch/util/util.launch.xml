<?xml version="1.0"?>
<launch>
  <!-- Topics -->
  <arg name="input/pointcloud" description="input topic name"/>
  <arg name="output/pointcloud" default="downsample/pointcloud" description="final output topic name"/>

  <!-- container -->
  <arg name="container" default="/sensing/lidar/top/pointcloud_preprocessor/velodyne_node_container" description="container name"/>

  <!-- option -->
  <arg name="use_intra_process" default="true" description="use ROS2 component container communication"/>

  <!-- pose_initializer -->
  <include file="$(find-pkg-share pose_initializer)/launch/pose_initializer.launch.xml"/>

  <!-- param files -->
  <arg name="crop_box_filter_measurement_range_param_path" default="$(find-pkg-share ndt_scan_matcher)/config/crop_box_filter_measurement_range.param.yaml"/>
  <arg name="voxel_grid_filter_param_path" default="$(find-pkg-share ndt_scan_matcher)/config/voxel_grid_downsample_filter.param.yaml"/>
  <arg name="random_downsample_filter_param_path" default="$(find-pkg-share ndt_scan_matcher)/config/random_downsample_filter.param.yaml"/>

  <!-- util -->
  <include file="$(find-pkg-share tier4_localization_launch)/launch/util/util.launch.py">
    <arg name="input/pointcloud" value="$(var input/pointcloud)"/>
    <arg name="output/pointcloud" value="$(var output/pointcloud)"/>
    <arg name="crop_box_filter_measurement_range_param_path" value="$(var crop_box_filter_measurement_range_param_path)"/>
    <arg name="voxel_grid_filter_param_path" value="$(var voxel_grid_filter_param_path)"/>
    <arg name="random_downsample_filter_param_path" value="$(var random_downsample_filter_param_path)"/>
  </include>
</launch>
