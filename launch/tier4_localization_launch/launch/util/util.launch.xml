<?xml version="1.0"?>
<launch>
  <!-- Topics -->
  <arg name="input/pointcloud" description="input topic name"/>
  <arg name="output/pointcloud" default="downsample/pointcloud" description="final output topic name"/>
  <arg name="stop_check_enabled" default="true"/>

  <let name="ndt_enabled" value="true" if="$(eval &quot;'$(var pose_estimator_mode)'=='lidar'&quot;)"/>
  <let name="ndt_enabled" value="false" if="$(eval &quot;'$(var pose_estimator_mode)'=='gnss'&quot;)"/>
  <let name="gnss_pose_cov" value="/sensing/gnss/pose_with_covariance" if="$(eval &quot;'$(var pose_estimator_mode)'=='lidar'&quot;)"/>
  <let name="gnss_pose_cov" value="/localization/pose_estimator/pose_with_covariance" if="$(eval &quot;'$(var pose_estimator_mode)'=='gnss'&quot;)"/>
  <let name="stop_check_enabled" value="false" if="$(eval &quot;'$(var pose_estimator_mode)'=='gnss'&quot;)"/>
  <!-- container -->
  <arg name="use_pointcloud_container" default="True" description="launch pointcloud container"/>
  <arg name="pointcloud_container_name" default="/pointcloud_container" description="container name"/>

  <!-- option -->
  <arg name="use_intra_process" default="true" description="use ROS2 component container communication"/>

  <!-- pose_initializer -->
  <include file="$(find-pkg-share pose_initializer)/launch/pose_initializer.launch.xml">
    <arg name="gnss_enabled" value="true"/>
    <arg name="ndt_enabled" value="$(var ndt_enabled)"/>
    <arg name="ekf_enabled" value="true"/>
    <arg name="stop_check_enabled" value="$(var stop_check_enabled)"/>
    <arg name="gnss_pose_cov" value="$(var gnss_pose_cov)"/>
  </include>

  <!-- pose_initializer (Automatic call from AD API) -->
  <group>
    <include file="$(find-pkg-share automatic_pose_initializer)/launch/automatic_pose_initializer.launch.xml"/>
  </group>

  <!-- util -->
  <group if="$(eval &quot;'$(var pose_estimator_mode)'=='lidar'&quot;)">
    <include file="$(find-pkg-share tier4_localization_launch)/launch/util/util.launch.py">
      <arg name="input/pointcloud" value="$(var input/pointcloud)"/>
      <arg name="output/pointcloud" value="$(var output/pointcloud)"/>
      <arg name="use_pointcloud_container" value="$(var use_pointcloud_container)"/>
      <arg name="pointcloud_container_name" value="$(var pointcloud_container_name)"/>
      <arg name="use_intra_process" value="$(var use_intra_process)"/>
    </include>
  </group>
</launch>
