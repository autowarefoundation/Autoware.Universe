<?xml version="1.0"?>
<launch>
  <!-- Pipeline junctions -->
  <arg name="lidar_detection_model"/>
  <arg name="objects_validation_method" default="obstacle_pointcloud"/>
  <arg name="use_pointcloud_map"/>

  <!-- external interfaces -->
  <arg name="input/pointcloud_map/pointcloud" default="/perception/object_recognition/detection/pointcloud_map_filtered/pointcloud"/>
  <arg name="input/obstacle_segmentation/pointcloud" default="/perception/obstacle_segmentation/pointcloud"/>
  <arg name="input/lidar_ml/objects" default="$(var lidar_detection_model)/objects"/>
  <arg name="input/lidar_rule/objects" default="clustering/objects"/>

  <!-- internal interfaces -->
  <let name="validator/input/objects" value="$(var input/lidar_ml/objects)"/>
  <let name="validator/input/obstacle_pointcloud" value="$(var input/pointcloud_map/pointcloud)" if="$(var use_pointcloud_map)"/>
  <let name="validator/input/obstacle_pointcloud" value="$(var input/obstacle_segmentation/pointcloud)" unless="$(var use_pointcloud_map)"/>
  <let name="validator/output/objects" value="$(var lidar_detection_model)/validation/objects"/>

  <!-- Validator -->
  <group if="$(eval &quot;'$(var objects_validation_method)'=='obstacle_pointcloud'&quot;)">
    <include file="$(find-pkg-share detected_object_validation)/launch/obstacle_pointcloud_based_validator.launch.xml">
      <arg name="input/detected_objects" value="$(var validator/input/objects)"/>
      <arg name="input/obstacle_pointcloud" value="$(var validator/input/obstacle_pointcloud)"/>
      <arg name="output/objects" value="$(var validator/output/objects)"/>
      <arg name="obstacle_pointcloud_based_validator_param_path" value="$(var object_recognition_detection_obstacle_pointcloud_based_validator_param_path)"/>
    </include>
  </group>
  <group if="$(eval &quot;'$(var objects_validation_method)'=='occupancy_grid'&quot;)">
    <include file="$(find-pkg-share detected_object_validation)/launch/occupancy_grid_based_validator.launch.xml">
      <arg name="input/detected_objects" value="$(var validator/input/objects)"/>
      <arg name="output/objects" value="$(var validator/output/objects)"/>
    </include>
  </group>
</launch>
