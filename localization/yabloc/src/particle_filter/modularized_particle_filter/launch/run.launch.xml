<launch>
    <!-- ========================================= -->
    <arg name="use_sim_time" default="true"/>
    <arg name="log_level" default="info"/>
    <arg name="MPF_GNSS_POSE_CORRECTOR_ENABLED" default="true"/>

    <!-- ========================================= -->
    <node pkg="modularized_particle_filter" exec="predictor" name="predictor" output="screen" args="--ros-args --log-level $(var log_level)">
        <param name="use_sim_time" value="$(var use_sim_time)"/>

        <remap from="initialpose" to="/initialpose" />
        <remap from="twist_with_covariance" to="/eagleye/twist_with_covariance" />

        <remap from="weighted_particles"  to="weighted_particles" />
        <remap from="predicted_particles" to="predicted_particles" />
        <remap from="predicted_mean_pose" to="predicted_mean_pose" />
        <remap from="resampled_particles" to="resampled_particles" />

        <param name="num_of_particles" value="$(env MPF_NUM_OF_PARTICLES 500)" />
        <param name="resampling_interval_seconds" value="$(env MPF_PREDICTOR_RESAMPLING_INTERVAL_SECONDS 1.0)" />
        <param name="prediction_rate" value="$(env MPF_PREDICTOR_PREDICTION_RATE 50.0)" />
    </node>

    <node if="$(var MPF_GNSS_POSE_CORRECTOR_ENABLED)" pkg="modularized_particle_filter" exec="gnss_pose_corrector" name="gnss_pose_corrector" args="--ros-args --log-level info">
        <remap from="weighted_particles" to="weighted_particles" />
        <remap from="pose_with_covariance" to="eagleye/pose_with_covariance" />
        <remap from="predicted_particles" to="predicted_particles" />

        <param name="particles_buffer_size" value="50" />
        <param name="flat_radius" value="1.0" />
    </node>

    <group>
        <node pkg="modularized_particle_filter" exec="particle_visualize" name="gnss_particle_array_to_marker_array" output="screen">
            <remap from="/particle_array" to="weighted_particles" />
            <remap from="/marker_array" to="mpf/weighted_particles/marker_array" />
        </node>
    </group>

</launch>