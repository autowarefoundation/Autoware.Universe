<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <!-- Essential parameters -->
  <arg name="vehicle_model" description="vehicle model name" default="lexus"/>
  <arg name="sensor_model" description="sensor model name" default="aip_xx1"/>
  <arg name="vehicle_id" default="$(env VEHICLE_ID default)" description="vehicle specific ID"/>

  <!-- Optional parameters -->
  <arg name="vehicle" default="true" description="launch vehicle"/>
  <arg name="system" default="true" description="launch system"/>
  <arg name="map" default="true" description="launch map"/>
  <arg name="sensing" default="true" description="launch sensing"/>
  <arg name="localization" default="true" description="launch localization"/>
  <arg name="perception" default="true" description="launch perception"/>
  <arg name="planning" default="true" description="launch planning"/>
  <arg name="control" default="true" description="launch control"/>
  <arg name="rviz" default="true" description="launch rviz"/>
  <arg name="use_pointcloud_container" default="true" description="launch pointcloud container"/>
  <arg name="pointcloud_container_name" default="pointcloud_container"/>
  <arg name="launch_vehicle_interface" default="false"/>
  <!-- Optional parameters for scenario simulation -->
  <arg name="scenario_simulation" default="false" description="use scenario simulation"/>
  <arg name="use_foa" default="false"/>

  <!-- Global parameters -->
  <!-- Do not add "group" in order to propagate global parameters -->
  <include file="$(find-pkg-share global_parameter_loader)/launch/global_params.launch.py">
    <arg name="use_sim_time" value="true"/>
    <arg name="vehicle_model" value="$(var vehicle_model)"/>
  </include>

  <!-- Pointcloud container -->
  <group>
    <include file="$(find-pkg-share autoware_launch)/launch/pointcloud_container.launch.py" if="$(var use_pointcloud_container)">
      <arg name="use_multithread" value="true"/>
      <arg name="container_name" value="$(var pointcloud_container_name)"/>
    </include>
  </group>

  <!-- Vehicle -->
  <group>
    <include file="$(find-pkg-share vehicle_launch)/launch/vehicle.launch.xml" if="$(var vehicle)">
      <arg name="vehicle_model" value="$(var vehicle_model)"/>
      <arg name="sensor_model" value="$(var sensor_model)"/>
      <arg name="vehicle_id" value="$(var vehicle_id)"/>
      <arg name="launch_vehicle_interface" value="$(var launch_vehicle_interface)"/>
    </include>
  </group>

  <!-- Sensing -->
  <group>
    <include file="$(find-pkg-share sensing_launch)/launch/sensing.launch.xml" if="$(var sensing)">
      <arg name="launch_driver" value="false"/>
      <arg name="sensor_model" value="$(var sensor_model)"/>
      <arg name="vehicle_mirror_param_file" value="$(find-pkg-share $(var vehicle_model)_description)/config/mirror.param.yaml"/>
      <arg name="use_pointcloud_container" value="$(var use_pointcloud_container)"/>
      <arg name="pointcloud_container_name" value="$(var pointcloud_container_name)"/>
    </include>
  </group>

  <!-- Perception -->
  <group>
    <include file="$(find-pkg-share perception_launch)/launch/perception.launch.xml" if="$(var perception)">
      <!-- options for mode: camera_lidar_fusion, lidar, camera -->
      <arg name="mode" value="lidar"/>
      <arg name="use_pointcloud_container" value="$(var use_pointcloud_container)"/>
      <arg name="pointcloud_container_name" value="$(var pointcloud_container_name)"/>
    </include>
  </group>

  <!-- Planning -->
  <group>
    <include file="$(find-pkg-share planning_launch)/launch/planning.launch.xml" if="$(var planning)">
      <arg name="use_foa" value="$(var use_foa)"/>
    </include>
  </group>

  <!-- Rviz -->
  <node
    pkg="rviz2"
    exec="rviz2"
    name="rviz2"
    output="screen"
    args="-d $(find-pkg-share apparent_safe_velocity_limiter)/launch/apparent_safe_velocity_limiter_bag.rviz -s $(find-pkg-share autoware_launch)/rviz/image/autoware.png"
  />

  <!-- Velocity Visualization Scripts-->
  <executable cmd="velocity_visualizer.py" launch-prefix="python3" cwd="$(find-pkg-share apparent_safe_velocity_limiter)/script/"/>
</launch>
