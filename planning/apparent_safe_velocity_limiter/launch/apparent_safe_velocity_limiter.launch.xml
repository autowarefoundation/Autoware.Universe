<launch>
  <!-- input/output -->
  <arg name="input_trajectory" default="/planning/scenario_planning/scenario_selector/trajectory"/>
  <arg name="input_dynamic_obstacles" default="/perception/object_recognition/objects"/>
  <arg name="input_occupancy_grid" default="/perception/occupancy_grid_map/map"/>
  <arg name="input_obstacle_pointcloud" default="/perception/obstacle_segmentation/pointcloud"/>
  <arg name="input_odometry" default="/localization/kinematic_state"/>
  <arg name="input_map" default="/map/vector_map"/>
  <arg name="input_route" default="/planning/mission_planning/route"/>
  <arg name="output_trajectory" default="/planning/scenario_planning/apparent_safe_velocity_limiter/trajectory"/>
  <arg name="output_debug_markers" default="/planning/scenario_planning/apparent_safe_velocity_limiter/debug_markers"/>

  <arg name="param_path" default="$(find-pkg-share apparent_safe_velocity_limiter)/config/default_apparent_safe_velocity_limiter.param.yaml"/>
  <arg name="vehicle_info_param_file" default="$(find-pkg-share vehicle_info_util)/config/vehicle_info.param.yaml"/>

  <let name="callgrind-launch-prefix" value="valgrind --tool=callgrind --dump-instr=yes -v --instr-atstart=no"/>
  <let name="gdb-launch-prefix" value="konsole -e gdb -ex run --args"/>
  <let name="gdb-gnome-launch-prefix" value="gnome-terminal -- gdb -ex run --args"/>
  <node pkg="pointcloud_preprocessor" exec="approximate_downsample_filter_node" name="approximate_downsample_filter">
    <remap from="input" to="$(var input_obstacle_pointcloud)"/>
    <remap from="output" to="$(var input_obstacle_pointcloud)/downsampled"/>

    <param name="input_frame" value="base_link"/>
    <param name="output_frame" value="map"/>
  </node>
  <node pkg="apparent_safe_velocity_limiter" exec="apparent_safe_velocity_limiter" name="apparent_safe_velocity_limiter" output="screen" launch-prefix="$(var callgrind-launch-prefix)">
    <param from="$(var param_path)"/>
    <param from="$(var vehicle_info_param_file)"/>
    <remap from="~/input/occupancy_grid" to="$(var input_occupancy_grid)"/>
    <remap from="~/input/obstacle_pointcloud" to="$(var input_obstacle_pointcloud)/downsampled"/>
    <remap from="~/input/trajectory" to="$(var input_trajectory)"/>
    <remap from="~/input/dynamic_obstacles" to="$(var input_dynamic_obstacles)"/>
    <remap from="~/input/odometry" to="$(var input_odometry)"/>
    <remap from="~/input/map" to="$(var input_map)"/>
    <remap from="~/input/route" to="$(var input_route)"/>
    <remap from="~/output/trajectory" to="$(var output_trajectory)"/>
    <remap from="~/output/debug_markers" to="$(var output_debug_markers)"/>
  </node>
</launch>
