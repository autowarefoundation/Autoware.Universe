/**:
  ros__parameters:
    # publish debug image, including bounding box, class name, mask
    is_publish_debug_image: false

    # publish color mask for result visualization
    is_publish_color_mask: false

    model_path: "$(var data_path)/tensorrt_rtmdet/$(var model_name).onnx" # Path to the ONNX model file
    color_map_path: "$(var data_path)/tensorrt_rtmdet/color_map.csv" # Path to the CSV file containing color mappings for classes, used for mapping class IDs to pixel values in the mask image
    plugin_paths: [ "$(find-pkg-prefix trt_batched_nms)/lib/libtrt_batched_nms_plugin.so" ] # List of paths to the TensorRT plugin shared libraries, needed for custom layers or operations.
    input_image_mean: [ 103.53, 116.28, 123.675 ] # Mean values for input image, used for normalization during preprocessing.
    input_image_std_dev: [ 57.375, 57.12, 58.395 ] # Standard deviation values for input image, used for normalization during preprocessing.
    score_threshold: 0.3 # The confidence score threshold, detections below this value will be ignored.
    nms_threshold: 0.3 # The NMS threshold, used to filter overlapping detections based on IoU.
    mask_threshold: 0.7 # The threshold used for mask predictions, values above this threshold are considered part of the object.
    precision: "fp16" # Operation precision to be used on inference. Valid value is one of: [fp32, fp16, int8].
    dla_core_id: -1 # If positive ID value is specified, the node assign inference task to the DLA core.
    quantize_first_layer: false # If true, set the operating precision for the first (input) layer to be fp16. This option is valid only when precision==int8.
    quantize_last_layer: false # If true, set the operating precision for the last (output) layer to be fp16. This option is valid only when precision==int8.
    profile_per_layer: false # If true, profiler function will be enabled. Since the profile function may affect execution speed, it is recommended to set this flag true only for development purpose.
    clip_value: 6.0 # If positive value is specified, the value of each layer output will be clipped between [0.0, clip_value]. This option is valid only when precision==int8 and used to manually specify the dynamic range instead of using any calibration.
    preprocess_on_gpu: true # If true, pre-processing is performed on GPU.
    calibration_image_list_path: "" # Path to a file which contains path to images. Those images will be used for int8 quantization.
